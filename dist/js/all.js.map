{"version":3,"sources":["main.js","butter.js","theme.js","tilt.js"],"names":["rotateOnScroll","window","innerHeight","jQuery","scrollTop","scroll","scrolled","css","leaves","vh","vw","innerWidth","anime","targets","translateY","opacity","duration","easing","translateX","delay","stagger","enters","direction","scale","n","Promise","done","setTimeout","root","Butter","self","this","defaults","wrapperId","wrapperDamper","cancelOnTouch","validateOptions","ops","prop","hasOwnProperty","Object","defineProperty","value","getOwnPropertyDescriptor","wrapper","wrapperOffset","animateId","resizing","active","wrapperHeight","bodyHeight","prototype","init","options","document","getElementById","style","position","width","clientHeight","body","height","addEventListener","resize","bind","cancel","requestAnimationFrame","animate","wrapperUpdate","scrollY","undefined","scrollingElement","documentElement","transform","toFixed","checkResize","cancelAnimationFrame","parseInt","removeEventListener","removeAttribute","butter","on","barba","sync","transitions","async","data","once","AOS","$","e","preventDefault","button","custom_uploader","wp","media","title","library","type","text","multiple","attachment","state","get","first","toJSON","html","url","next","show","val","id","open","hide","prev","VanillaTilt","constructor","element","settings","Node","clientWidth","left","top","gammazero","betazero","lastgammazero","lastbetazero","transitionTimeout","updateCall","event","updateBind","update","resetBind","reset","extendSettings","reverse","glare","isSettingTrue","glarePrerender","fullPageListening","gyroscope","gyroscopeSamples","elementListener","getElementListener","prepareGlare","updateClientSize","addEventListeners","updateInitialPosition","static","setting","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","removeEventListeners","destroy","clearTimeout","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","posX","posY","clientX","clientY","willChange","setTransition","perspective","resetGlare","glareElement","startX","startY","max","backupScale","getValues","x","y","Math","min","tiltX","tiltY","percentageX","percentageY","angle","atan2","PI","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","axis","dispatchEvent","CustomEvent","detail","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","assign","overflow","updateGlareSize","glareSize","transition","speed","defaultSettings","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","elements","NodeList","slice","call","Array","forEach","querySelectorAll"],"mappings":"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","file":"all.js","sourcesContent":["/* \r\n jQuery(document).ready(function () {\r\n    var mySwiper = new Swiper(\".hero-vertical-swiper\", {\r\n        direction: \"vertical\",\r\n        effect: \"fade\",\r\n        allowTouchMove: false,\r\n\r\n        speed: 2000,\r\n        autoplay: {\r\n            delay: 5000,\r\n          },\r\n        loop: true,\r\n    \r\n        pagination: {\r\n          el: \".swiper-pagination\",\r\n          clickable: true,\r\n        },\r\n      });\r\n  })\r\n */\r\nfunction rotateOnScroll(){\r\n  const height = window.innerHeight;\r\n  const scrolled = jQuery(window).scrollTop();\r\n  jQuery(window).scroll(function(){\r\n    const scrolled = jQuery(window).scrollTop()/80;\r\n    jQuery(\".bg-rotary-gear\").css(\"transform\", \"rotate(\"+ (scrolled) +\"deg)\")\r\n  });\r\n};\r\nrotateOnScroll();\r\n/////BARBA\r\n/////////////////////////////////////////////\r\n\r\n \r\n\r\nfunction leaves(){\r\n  const vh = window.innerHeight;\r\n  const vw = window.innerWidth;\r\n  anime({\r\n    targets:\".bottom-leave\",\r\n    translateY:vh,\r\n    opacity:0,\r\n    duration:1000,\r\n    easing:\"easeInExpo\"\r\n  }); \r\n\r\n  anime({\r\n    targets:\".right-leave-staggers\",\r\n    translateX:vw,\r\n    opacity:0,\r\n    duration:1000,\r\n    delay: anime.stagger(250),\r\n    easing:\"easeInExpo\"\r\n    \r\n  }); \r\n\r\n  anime({\r\n    targets:\".right-leave\",\r\n    translateX:vw,\r\n    opacity:0,\r\n    duration:1000,\r\n    easing:\"easeInExpo\"\r\n    \r\n  }); \r\n\r\n  anime({\r\n    targets:\".top-leave\",\r\n    translateY:-vh,\r\n    opacity:0,\r\n    duration:1000,\r\n    easing:\"easeInExpo\"\r\n  });\r\n\r\n  anime({\r\n    targets:\".left-leave\",\r\n    translateX:-vw,\r\n    opacity:0,\r\n    duration:1000,\r\n    easing:\"easeInExpo\"\r\n  }); \r\n  \r\n/*   animation.finished.then(function() {\r\n    // Do things...\r\n  }); */\r\n}\r\n\r\n\r\n//////////////////\r\nfunction enters(){\r\n  const vh = window.innerHeight;\r\n  const vw = window.innerWidth;\r\n\r\n\r\n  anime({\r\n    targets:\".bottom-enter\",\r\n    translateX:[vh,0],\r\n    opacity:[0,1],\r\n    duration:1000,\r\n    easing:\"easeInExpo\"\r\n  }); \r\n\r\n  anime({\r\n    targets:\".right-enter\",\r\n    translateX:[vw,0],\r\n    opacity:[0,1],\r\n    duration:1000,\r\n    easing:\"easeInExpo\"\r\n    \r\n  }); \r\n\r\n  anime({\r\n    targets:\".top-enter\",\r\n    translateY:[\"-100%\",0],\r\n    opacity:[0,1],\r\n    duration:1000,\r\n    easing:\"easeOutExpo\"\r\n  });\r\n\r\n  anime({\r\n    targets:\".top-enter-staggers\",\r\n    translateY:[-vh,0],\r\n    //opacity:[0,1],\r\n    duration:1000,\r\n    delay: anime.stagger(250, {direction: \"reverse\"}),\r\n    easing:\"easeOutExpo\"\r\n  });\r\n  anime({\r\n    targets:\".popup-enter-staggers\",\r\n    scale:[0,1],\r\n    //opacity:[0,1],\r\n    duration:1000,\r\n    delay: anime.stagger(100),\r\n    easing: 'spring(1, 80, 10, 0)'\r\n  });\r\n  anime({\r\n    targets:\".left-enter\",\r\n    translateX:[-vw,0],\r\n    opacity:[0,1],\r\n    duration:1000,\r\n    easing:\"easeOutExpo\"\r\n  }); \r\n  anime({\r\n    targets:\".left-enter-easy\",\r\n    translateX:[\"-100%\",0],\r\n    opacity:[0,1],\r\n    duration:1000,\r\n    easing:\"easeOutExpo\"\r\n  }); \r\n}\r\nfunction delay(n){\r\n  n = n || 2000;\r\n  return new Promise(done =>{\r\n    setTimeout(()=>{\r\n      done();\r\n    },n);\r\n  });\r\n}\r\n\r\n\r\n//////////////////////////\r\njQuery(window).on(\"load\", function() {\r\n\tbarba.init({\r\n    sync:true,\r\n    transitions: [{\r\n      async leave(data){\r\n        const done = this.async();\r\n        leaves();\r\n        await delay(1500);\r\n        done();\r\n      },\r\n\r\n      async enter(data) {\r\n        enters();\r\n      },\r\n      once(data){\r\n        enters();\r\n      }\r\n      \r\n    }]\r\n  })\r\n\t\r\n\r\n  AOS.init();\r\n/*   document.addEventListener('aos:in', ({ detail }) => {\r\n    console.log(detail);\r\n  }); */\r\n\r\n\r\n  butter.init({\r\n    wrapperId: 'page',\r\n    cancelOnTouch: true\r\n  });\r\n\r\n});\r\n\r\n\r\n","// butter.js\r\n\r\n(function(root){\r\n    var Butter = function() {\r\n\r\n        var self = this;\r\n\r\n        this.defaults = {\r\n            wrapperId: 'butter',\r\n            wrapperDamper: 0.07,\r\n            cancelOnTouch: false\r\n        }\r\n        \r\n        this.validateOptions = function(ops) {\r\n            for (var prop in ops) {\r\n                if (self.defaults.hasOwnProperty(prop)) {\r\n                    Object.defineProperty(self.defaults, prop, {value: Object.getOwnPropertyDescriptor(ops, prop).value})\r\n                }\r\n            }\r\n        }\r\n\r\n        this.wrapperDamper;\r\n        this.wrapperId;\r\n        this.cancelOnTouch;\r\n        this.wrapper;\r\n        this.wrapperOffset = 0;\r\n        this.animateId;\r\n        this.resizing = false;\r\n        this.active = false;\r\n        this.wrapperHeight;\r\n        this.bodyHeight;\r\n    };\r\n\r\n    Butter.prototype = {\r\n\r\n        init: function(options) {\r\n            if (options) {\r\n                this.validateOptions(options);\r\n            }\r\n\r\n            this.active = true;\r\n            this.resizing = false;\r\n            this.wrapperDamper = this.defaults.wrapperDamper;\r\n            this.wrapperId = this.defaults.wrapperId;\r\n            this.cancelOnTouch = this.defaults.cancelOnTouch;\r\n\r\n            this.wrapper = document.getElementById(this.wrapperId);\r\n            this.wrapper.style.position = 'fixed';\r\n            this.wrapper.style.width = '100%';\r\n\r\n            this.wrapperHeight = this.wrapper.clientHeight;\r\n            document.body.style.height = this.wrapperHeight + 'px';\r\n\r\n            window.addEventListener('resize', this.resize.bind(this));\r\n            if (this.cancelOnTouch) {\r\n                window.addEventListener('touchstart', this.cancel.bind(this));\r\n            }\r\n            this.wrapperOffset = 0.0;\r\n            this.animateId = window.requestAnimationFrame(this.animate.bind(this));\r\n\r\n            // window.addEventListener('load', this.resize.bind(this));\r\n        },\r\n\r\n        wrapperUpdate: function() {\r\n            var scrollY = (document.scrollingElement != undefined) ? document.scrollingElement.scrollTop : (document.documentElement.scrollTop || 0.0);\r\n            this.wrapperOffset += (scrollY - this.wrapperOffset) * this.wrapperDamper;\r\n            this.wrapper.style.transform = 'translate3d(0,' + (-this.wrapperOffset.toFixed(2)) + 'px, 0)';\r\n        },\r\n\r\n        checkResize: function() {\r\n            if (this.wrapperHeight != this.wrapper.clientHeight) {\r\n                this.resize();\r\n            }\r\n        },\r\n\r\n        resize: function() {\r\n            var self = this;\r\n            if (!self.resizing) {\r\n                self.resizing = true;\r\n                window.cancelAnimationFrame(self.animateId);\r\n                window.setTimeout(function() {\r\n                    self.wrapperHeight = self.wrapper.clientHeight;\r\n                    if (parseInt(document.body.style.height) != parseInt(self.wrapperHeight)) {\r\n                        document.body.style.height = self.wrapperHeight + 'px';\r\n                    }\r\n                    self.animateId = window.requestAnimationFrame(self.animate.bind(self));\r\n                    self.resizing = false;\r\n                }, 150)\r\n            }\r\n        },\r\n\r\n        animate: function() {\r\n            this.checkResize();\r\n            this.wrapperUpdate();\r\n            this.animateId = window.requestAnimationFrame(this.animate.bind(this));\r\n        },\r\n\r\n        cancel: function() {\r\n            if (this.active) {\r\n                window.cancelAnimationFrame(this.animateId);\r\n\r\n                window.removeEventListener('resize', this.resize);\r\n                window.removeEventListener('touchstart', this.cancel);\r\n                this.wrapper.removeAttribute('style');\r\n                document.body.removeAttribute('style');\r\n\r\n                this.active = false;\r\n                this.wrapper = \"\";\r\n                this.wrapperOffset = 0;\r\n                this.resizing = true;\r\n                this.animateId = \"\";\r\n            }\r\n        },\r\n    };\r\n\r\n    root.butter = new Butter();\r\n\r\n})(this);","jQuery(function($){\r\n\r\n\t// on upload button click\r\n\t$('body').on( 'click', '.misha-upl', function(e){\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tvar button = $(this),\r\n\t\tcustom_uploader = wp.media({\r\n\t\t\ttitle: 'Insert image',\r\n\t\t\tlibrary : {\r\n\t\t\t\t// uploadedTo : wp.media.view.settings.post.id, // attach to the current post?\r\n\t\t\t\ttype : 'image'\r\n\t\t\t},\r\n\t\t\tbutton: {\r\n\t\t\t\ttext: 'Use this image' // button label text\r\n\t\t\t},\r\n\t\t\tmultiple: false\r\n\t\t}).on('select', function() { // it also has \"open\" and \"close\" events\r\n\t\t\tvar attachment = custom_uploader.state().get('selection').first().toJSON();\r\n\t\t\tbutton.html('<img src=\"' + attachment.url + '\">').next().show().next().val(attachment.id);\r\n\t\t}).open();\r\n\t\r\n\t});\r\n\r\n\t// on remove button click\r\n\t$('body').on('click', '.misha-rmv', function(e){\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\tvar button = $(this);\r\n\t\tbutton.next().val(''); // emptying the hidden field\r\n\t\tbutton.hide().prev().html('Upload image');\r\n\t});\r\n\r\n});","var VanillaTilt = (function () {\r\n    'use strict';\r\n    \r\n    /**\r\n     * Created by Sergiu Șandor (micku7zu) on 1/27/2017.\r\n     * Original idea: https://github.com/gijsroge/tilt.js\r\n     * MIT License.\r\n     * Version 1.7.2\r\n     */\r\n    \r\n    class VanillaTilt {\r\n      constructor(element, settings = {}) {\r\n        if (!(element instanceof Node)) {\r\n          throw (\"Can't initialize VanillaTilt because \" + element + \" is not a Node.\");\r\n        }\r\n    \r\n        this.width = null;\r\n        this.height = null;\r\n        this.clientWidth = null;\r\n        this.clientHeight = null;\r\n        this.left = null;\r\n        this.top = null;\r\n    \r\n        // for Gyroscope sampling\r\n        this.gammazero = null;\r\n        this.betazero = null;\r\n        this.lastgammazero = null;\r\n        this.lastbetazero = null;\r\n    \r\n        this.transitionTimeout = null;\r\n        this.updateCall = null;\r\n        this.event = null;\r\n    \r\n        this.updateBind = this.update.bind(this);\r\n        this.resetBind = this.reset.bind(this);\r\n    \r\n        this.element = element;\r\n        this.settings = this.extendSettings(settings);\r\n    \r\n        this.reverse = this.settings.reverse ? -1 : 1;\r\n        this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\r\n        this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\r\n        this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\r\n        this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\r\n        this.gyroscopeSamples = this.settings.gyroscopeSamples;\r\n    \r\n        this.elementListener = this.getElementListener();\r\n    \r\n        if (this.glare) {\r\n          this.prepareGlare();\r\n        }\r\n    \r\n        if (this.fullPageListening) {\r\n          this.updateClientSize();\r\n        }\r\n    \r\n        this.addEventListeners();\r\n        this.reset();\r\n        this.updateInitialPosition();\r\n      }\r\n    \r\n      static isSettingTrue(setting) {\r\n        return setting === \"\" || setting === true || setting === 1;\r\n      }\r\n    \r\n      /**\r\n       * Method returns element what will be listen mouse events\r\n       * @return {Node}\r\n       */\r\n      getElementListener() {\r\n        if (this.fullPageListening) {\r\n          return window.document;\r\n        }\r\n    \r\n        if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n          const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\r\n    \r\n          if (mouseEventElement) {\r\n            return mouseEventElement;\r\n          }\r\n        }\r\n    \r\n        if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n          return this.settings[\"mouse-event-element\"];\r\n        }\r\n    \r\n        return this.element;\r\n      }\r\n    \r\n      /**\r\n       * Method set listen methods for this.elementListener\r\n       * @return {Node}\r\n       */\r\n      addEventListeners() {\r\n        this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n        this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n        this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n        this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n        this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n    \r\n        this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n        this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n        this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    \r\n        if (this.glare || this.fullPageListening) {\r\n          window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n        }\r\n    \r\n        if (this.gyroscope) {\r\n          window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n        }\r\n      }\r\n    \r\n      /**\r\n       * Method remove event listeners from current this.elementListener\r\n       */\r\n      removeEventListeners() {\r\n        this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\r\n        this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\r\n        this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\r\n    \r\n        if (this.gyroscope) {\r\n          window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\r\n        }\r\n    \r\n        if (this.glare || this.fullPageListening) {\r\n          window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n        }\r\n      }\r\n    \r\n      destroy() {\r\n        clearTimeout(this.transitionTimeout);\r\n        if (this.updateCall !== null) {\r\n          cancelAnimationFrame(this.updateCall);\r\n        }\r\n    \r\n        this.reset();\r\n    \r\n        this.removeEventListeners();\r\n        this.element.vanillaTilt = null;\r\n        delete this.element.vanillaTilt;\r\n    \r\n        this.element = null;\r\n      }\r\n    \r\n      onDeviceOrientation(event) {\r\n        if (event.gamma === null || event.beta === null) {\r\n          return;\r\n        }\r\n    \r\n        this.updateElementPosition();\r\n    \r\n        if (this.gyroscopeSamples > 0) {\r\n          this.lastgammazero = this.gammazero;\r\n          this.lastbetazero = this.betazero;\r\n    \r\n          if (this.gammazero === null) {\r\n            this.gammazero = event.gamma;\r\n            this.betazero = event.beta;\r\n          } else {\r\n            this.gammazero = (event.gamma + this.lastgammazero) / 2;\r\n            this.betazero = (event.beta + this.lastbetazero) / 2;\r\n          }\r\n    \r\n          this.gyroscopeSamples -= 1;\r\n        }\r\n    \r\n        const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n        const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n    \r\n        const degreesPerPixelX = totalAngleX / this.width;\r\n        const degreesPerPixelY = totalAngleY / this.height;\r\n    \r\n        const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\r\n        const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\r\n    \r\n        const posX = angleX / degreesPerPixelX;\r\n        const posY = angleY / degreesPerPixelY;\r\n    \r\n        if (this.updateCall !== null) {\r\n          cancelAnimationFrame(this.updateCall);\r\n        }\r\n    \r\n        this.event = {\r\n          clientX: posX + this.left,\r\n          clientY: posY + this.top,\r\n        };\r\n    \r\n        this.updateCall = requestAnimationFrame(this.updateBind);\r\n      }\r\n    \r\n      onMouseEnter() {\r\n        this.updateElementPosition();\r\n        this.element.style.willChange = \"transform\";\r\n        this.setTransition();\r\n      }\r\n    \r\n      onMouseMove(event) {\r\n        if (this.updateCall !== null) {\r\n          cancelAnimationFrame(this.updateCall);\r\n        }\r\n    \r\n        this.event = event;\r\n        this.updateCall = requestAnimationFrame(this.updateBind);\r\n      }\r\n    \r\n      onMouseLeave() {\r\n        this.setTransition();\r\n    \r\n        if (this.settings.reset) {\r\n          requestAnimationFrame(this.resetBind);\r\n        }\r\n      }\r\n    \r\n      reset() {\r\n        this.event = {\r\n          clientX: this.left + this.width / 2,\r\n          clientY: this.top + this.height / 2\r\n        };\r\n    \r\n        if (this.element && this.element.style) {\r\n          this.element.style.transform = `perspective(${this.settings.perspective}px) ` +\r\n            `rotateX(0deg) ` +\r\n            `rotateY(0deg) ` +\r\n            `scale3d(1, 1, 1)`;\r\n        }\r\n    \r\n        this.resetGlare();\r\n      }\r\n    \r\n      resetGlare() {\r\n        if (this.glare) {\r\n          this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\r\n          this.glareElement.style.opacity = \"0\";\r\n        }\r\n      }\r\n    \r\n      updateInitialPosition() {\r\n        if (this.settings.startX === 0 && this.settings.startY === 0) {\r\n          return;\r\n        }\r\n    \r\n        this.onMouseEnter();\r\n    \r\n        if (this.fullPageListening) {\r\n          this.event = {\r\n            clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\r\n            clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\r\n          };\r\n        } else {\r\n          this.event = {\r\n            clientX: this.left + ((this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width),\r\n            clientY: this.top + ((this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height)\r\n          };\r\n        }\r\n    \r\n    \r\n        let backupScale = this.settings.scale;\r\n        this.settings.scale = 1;\r\n        this.update();\r\n        this.settings.scale = backupScale;\r\n        this.resetGlare();\r\n      }\r\n    \r\n      getValues() {\r\n        let x, y;\r\n    \r\n        if (this.fullPageListening) {\r\n          x = this.event.clientX / this.clientWidth;\r\n          y = this.event.clientY / this.clientHeight;\r\n        } else {\r\n          x = (this.event.clientX - this.left) / this.width;\r\n          y = (this.event.clientY - this.top) / this.height;\r\n        }\r\n    \r\n        x = Math.min(Math.max(x, 0), 1);\r\n        y = Math.min(Math.max(y, 0), 1);\r\n    \r\n        let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\r\n        let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\r\n        let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\r\n    \r\n        return {\r\n          tiltX: tiltX,\r\n          tiltY: tiltY,\r\n          percentageX: x * 100,\r\n          percentageY: y * 100,\r\n          angle: angle\r\n        };\r\n      }\r\n    \r\n      updateElementPosition() {\r\n        let rect = this.element.getBoundingClientRect();\r\n    \r\n        this.width = this.element.offsetWidth;\r\n        this.height = this.element.offsetHeight;\r\n        this.left = rect.left;\r\n        this.top = rect.top;\r\n      }\r\n    \r\n      update() {\r\n        let values = this.getValues();\r\n    \r\n        this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" +\r\n          \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" +\r\n          \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" +\r\n          \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\r\n    \r\n        if (this.glare) {\r\n          this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\r\n          this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\r\n        }\r\n    \r\n        this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\r\n          \"detail\": values\r\n        }));\r\n    \r\n        this.updateCall = null;\r\n      }\r\n    \r\n      /**\r\n       * Appends the glare element (if glarePrerender equals false)\r\n       * and sets the default style\r\n       */\r\n      prepareGlare() {\r\n        // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n        if (!this.glarePrerender) {\r\n          // Create glare element\r\n          const jsTiltGlare = document.createElement(\"div\");\r\n          jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n    \r\n          const jsTiltGlareInner = document.createElement(\"div\");\r\n          jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n    \r\n          jsTiltGlare.appendChild(jsTiltGlareInner);\r\n          this.element.appendChild(jsTiltGlare);\r\n        }\r\n    \r\n        this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n        this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n    \r\n        if (this.glarePrerender) {\r\n          return;\r\n        }\r\n    \r\n        Object.assign(this.glareElementWrapper.style, {\r\n          \"position\": \"absolute\",\r\n          \"top\": \"0\",\r\n          \"left\": \"0\",\r\n          \"width\": \"100%\",\r\n          \"height\": \"100%\",\r\n          \"overflow\": \"hidden\",\r\n          \"pointer-events\": \"none\"\r\n        });\r\n    \r\n        Object.assign(this.glareElement.style, {\r\n          \"position\": \"absolute\",\r\n          \"top\": \"50%\",\r\n          \"left\": \"50%\",\r\n          \"pointer-events\": \"none\",\r\n          \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\r\n          \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\r\n          \"transform-origin\": \"0% 0%\",\r\n          \"opacity\": \"0\",\r\n        });\r\n    \r\n        this.updateGlareSize();\r\n      }\r\n    \r\n      updateGlareSize() {\r\n        if (this.glare) {\r\n          const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\r\n    \r\n          Object.assign(this.glareElement.style, {\r\n            \"width\": `${glareSize}px`,\r\n            \"height\": `${glareSize}px`,\r\n          });\r\n        }\r\n      }\r\n    \r\n      updateClientSize() {\r\n        this.clientWidth = window.innerWidth\r\n          || document.documentElement.clientWidth\r\n          || document.body.clientWidth;\r\n    \r\n        this.clientHeight = window.innerHeight\r\n          || document.documentElement.clientHeight\r\n          || document.body.clientHeight;\r\n      }\r\n    \r\n      onWindowResize() {\r\n        this.updateGlareSize();\r\n        this.updateClientSize();\r\n      }\r\n    \r\n      setTransition() {\r\n        clearTimeout(this.transitionTimeout);\r\n        this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\r\n        if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\r\n    \r\n        this.transitionTimeout = setTimeout(() => {\r\n          this.element.style.transition = \"\";\r\n          if (this.glare) {\r\n            this.glareElement.style.transition = \"\";\r\n          }\r\n        }, this.settings.speed);\r\n    \r\n      }\r\n    \r\n      /**\r\n       * Method return patched settings of instance\r\n       * @param {boolean} settings.reverse - reverse the tilt direction\r\n       * @param {number} settings.max - max tilt rotation (degrees)\r\n       * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n       * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n       * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n       * @param {string} settings.easing - Easing on enter/exit\r\n       * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n       * @param {number} settings.speed - Speed of the enter/exit transition\r\n       * @param {boolean} settings.transition - Set a transition on enter/exit\r\n       * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\r\n       * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n       * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n       * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n       * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n       * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n       * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n       * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n       * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n       * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n       */\r\n      extendSettings(settings) {\r\n        let defaultSettings = {\r\n          reverse: false,\r\n          max: 15,\r\n          startX: 0,\r\n          startY: 0,\r\n          perspective: 1000,\r\n          easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n          scale: 1,\r\n          speed: 300,\r\n          transition: true,\r\n          axis: null,\r\n          glare: false,\r\n          \"max-glare\": 1,\r\n          \"glare-prerender\": false,\r\n          \"full-page-listening\": false,\r\n          \"mouse-event-element\": null,\r\n          reset: true,\r\n          gyroscope: true,\r\n          gyroscopeMinAngleX: -45,\r\n          gyroscopeMaxAngleX: 45,\r\n          gyroscopeMinAngleY: -45,\r\n          gyroscopeMaxAngleY: 45,\r\n          gyroscopeSamples: 10\r\n        };\r\n    \r\n        let newSettings = {};\r\n        for (var property in defaultSettings) {\r\n          if (property in settings) {\r\n            newSettings[property] = settings[property];\r\n          } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n            let attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n            try {\r\n              newSettings[property] = JSON.parse(attribute);\r\n            } catch (e) {\r\n              newSettings[property] = attribute;\r\n            }\r\n    \r\n          } else {\r\n            newSettings[property] = defaultSettings[property];\r\n          }\r\n        }\r\n    \r\n        return newSettings;\r\n      }\r\n    \r\n      static init(elements, settings) {\r\n        if (elements instanceof Node) {\r\n          elements = [elements];\r\n        }\r\n    \r\n        if (elements instanceof NodeList) {\r\n          elements = [].slice.call(elements);\r\n        }\r\n    \r\n        if (!(elements instanceof Array)) {\r\n          return;\r\n        }\r\n    \r\n        elements.forEach((element) => {\r\n          if (!(\"vanillaTilt\" in element)) {\r\n            element.vanillaTilt = new VanillaTilt(element, settings);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    if (typeof document !== \"undefined\") {\r\n      /* expose the class to window */\r\n      window.VanillaTilt = VanillaTilt;\r\n    \r\n      /**\r\n       * Auto load\r\n       */\r\n      VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n    }\r\n    \r\n    return VanillaTilt;\r\n    \r\n    }());"]}